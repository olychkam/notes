{"version":3,"sources":["1-api/api.ts","3-redux/notes-reducer.ts","2-components/c-1-Search/Search.tsx","2-components/c-2-AddNotes/AddNotes.tsx","2-components/c-5-Button/Button.tsx","2-components/c-6-Input/Input.jsx","3-redux/tag-reducer.ts","2-components/c-4-NotesField/NotesField.tsx","2-components/c-7-TagBlock/AddTag/AddTag.tsx","2-components/c-8-Tag/Tag.tsx","2-components/c-7-TagBlock/TagContainer.tsx","2-components/c-3-Note/Note.tsx","4-app/App.tsx","reportWebVitals.ts","3-redux/store.ts","index.tsx","4-app/App.module.scss","2-components/c-4-NotesField/NotesField.module.scss","2-components/c-3-Note/Note.module.scss","2-components/c-7-TagBlock/AddTag/AddTag.module.scss","2-components/c-8-Tag/Tag.module.scss","2-components/c-5-Button/Button.module.scss","2-components/c-6-Input/Input.module.scss","2-components/c-7-TagBlock/TagContainer.module.scss"],"names":["axiosInstance","axios","create","withCredentials","headers","Accept","notesAPI","get","then","res","tagsAPI","initialState","findNotesObject","idArr","notesArr","arr","i","length","j","id","push","getNotesListTC","dispatch","a","type","notes","data","console","log","Search","findNote","useDispatch","useState","value","setValue","onSendRequest","useCallback","trim","showAll","className","s","search","TextField","placeholder","onChange","e","currentTarget","label","variant","onClick","color","AddNotes","props","noteText","setNoteText","addNotes","addNote","Button","children","btn","Input","areaText","text_area","onKeyUp","onKeyPress","highlight","tagsNameArray","event","setAreaText","target","addTagAC","tag","NotesField","textNote","tags","map","t","title","slice","hashTagsArray","match","container","button","updateNotes","setEditMode","text","editMode","inputBlock","keyCode","tagTitle","replace","newTagObjj","v1","noteId","note_text","AddTag","tagText","setTagText","input","addTag","Tag","deleteNote","tagBtn","TagContainer","mappedTags","newTagObj","Note","note","useSelector","state","filter","headerNote","updateNoteObj","updateNoteAC","App","tagsArr","useEffect","mappedNotes","app","name","notesId","nodeId","newNote","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","n","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.655aa20b.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport {NotesType} from \"../3-redux/notes-reducer\";\r\nimport {TagType} from \"../3-redux/tag-reducer\";\r\nconst defaultOptions = {\r\n    withCredentials: true,\r\n    headers: {\r\n        Accept: 'application/json',\r\n    }\r\n}\r\n\r\nconst axiosInstance = axios.create(defaultOptions);\r\n\r\nexport const notesAPI = {\r\n    getNotes() {\r\n        return axiosInstance.get<NotesType[]>('http://localhost:3001/notes.json')\r\n            .then(res => res)\r\n    }\r\n}\r\nexport const tagsAPI = {\r\n    getTags() {\r\n        return axiosInstance.get<TagType[]>(`http://localhost:3001/notes.json`)\r\n            .then(res => res)\r\n    }\r\n}\r\n\r\nexport type ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: D\r\n}","import {ThunkDispatch} from \"redux-thunk\"\r\nimport {AppStateType} from \"./store\";\r\nimport {notesAPI} from \"../1-api/api\";\r\n\r\nexport type NotesType = {\r\n    id: string,\r\n    title: string,\r\n    textNote: string\r\n}\r\nconst initialState: NotesType[] = []\r\ntype InitialStateType = typeof initialState\r\ntype ActionType = ReturnType<typeof setNotesAC> | ReturnType<typeof addNotesAC> | ReturnType<typeof updateNoteAC>\r\n    | ReturnType<typeof deleteNoteAC> | ReturnType<typeof setNodesFilter>\r\n\r\nconst findNotesObject = (idArr: string[], notesArr: NotesType[]) => {\r\n    let arr = []\r\n    for (let i = 0; i < notesArr.length; i++) {\r\n        for (let j = 0; j < idArr.length; j++) {\r\n            if (notesArr[i].id === idArr[j]) {\r\n                arr.push(notesArr[i])\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}\r\nexport const notesReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-NOTE':\r\n            return [...action.notes]\r\n        case 'ADD-NOTE':\r\n            return [action.note, ...state]\r\n        case 'UPDATE-NOTE':\r\n            return state.map(note => note.id === action.note.id ? action.note : note)\r\n        case \"DELETE-NOTE\":\r\n            return state.filter(n => n.id !== action.id)\r\n        case \"FILTER-NOTES\":\r\n            return findNotesObject(action.nodeId, [...state])\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setNotesAC = (notes: NotesType[]) => ({type: 'SET-NOTE', notes} as const)\r\nexport const addNotesAC = (note: NotesType) => ({type: 'ADD-NOTE', note} as const)\r\nexport const updateNoteAC = (note: NotesType) => ({type: 'UPDATE-NOTE', note} as const)\r\nexport const deleteNoteAC = (id: string) => ({type: 'DELETE-NOTE', id} as const)\r\nexport const setNodesFilter = (nodeId: string[]) => ({type: 'FILTER-NOTES', nodeId} as const)\r\n\r\n\r\nexport const getNotesListTC = () => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionType>) => {\r\n    try {\r\n        const res = await notesAPI.getNotes()\r\n        // @ts-ignore\r\n\r\n        dispatch(setNotesAC(res.data.notes)\r\n        );\r\n    } catch (error) {\r\n        console.log('failed', 'Some error occurred')\r\n    }\r\n}\r\n/*export const addNoteTC = (title: string) => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionType>) => {\r\n    try {\r\n        const newNoteObj: NotesType = {\r\n            id: v1(),\r\n            title: title,\r\n            textNote: 'Add notes'\r\n        }\r\n        await notesAPI.addNotes(newNoteObj)\r\n        dispatch(addNotesAC(newNoteObj));\r\n    } catch (error) {\r\n        console.log('failed', 'Some error occurred')\r\n    }\r\n}*/\r\n\r\n\r\n\r\n","import React, {useCallback, useState} from 'react';\r\nimport s from '../../4-app/App.module.scss'\r\nimport {Button} from '@material-ui/core';\r\nimport {TextField} from '@material-ui/core';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getNotesListTC} from \"../../3-redux/notes-reducer\";\r\n\r\ntype SearchPropsType = {\r\n    findNote: (value: string) => void\r\n}\r\n\r\nexport const Search: React.FC<SearchPropsType> = ({findNote}) => {\r\n    const dispatch = useDispatch()\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const onSendRequest = useCallback(() => {\r\n        if (value.trim() !== '') {\r\n            findNote(`#${value}`)\r\n            setValue('')\r\n            console.log('VSE OK')\r\n        } else {\r\n            console.log('Title is required')\r\n        }\r\n    }, [value,findNote])\r\n\r\n    const showAll = useCallback(() => {\r\n        dispatch(getNotesListTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={s.search}>\r\n            <TextField value={value}\r\n                       placeholder='Search...'\r\n                       onChange={inputHandler}\r\n                       id=\"filled-basic\" label=\"Search Notes\" variant=\"filled\"/>\r\n            <Button onClick={showAll} variant=\"outlined\" color=\"inherit\">All</Button>\r\n            <Button onClick={onSendRequest} variant=\"outlined\" color=\"inherit\">Filter</Button>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport s from '../../4-app/App.module.scss'\r\nimport {Button, TextField} from \"@material-ui/core\";\r\n\r\ntype AddNotesType = {\r\n    addNote: (title: string) => void\r\n}\r\n\r\nexport const AddNotes = (props: AddNotesType) => {\r\n    const [noteText, setNoteText] = useState<string>('')\r\n\r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNoteText(e.currentTarget.value)\r\n    }\r\n    const addNote = () => {\r\n        if (noteText.trim() !== '') {\r\n            props.addNote(noteText)\r\n            setNoteText('')\r\n        } else {\r\n            console.log('Title is required')\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.addNotes}>\r\n            <TextField value={noteText} onChange={inputHandler} id=\"filled-basic\" label=\"Add Notes\" variant=\"filled\"/>\r\n            <Button onClick={addNote} variant=\"outlined\" color=\"inherit\">Add</Button>\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./Button.module.scss\";\r\n\r\ntype PropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\ntype ButtonPropsType = PropsType & {}\r\nexport const Button: React.FC<ButtonPropsType> = ({children,onClick}) => {\r\n    return (\r\n        <div>\r\n            <button onClick={onClick} className={s.btn}>{children}</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Input.module.scss\";\r\nimport {HighlightWithinTextarea} from \"react-highlight-within-textarea\";\r\n\r\n\r\nexport const Input = (props) => {\r\n\r\n    return (\r\n        <HighlightWithinTextarea value={props.areaText}\r\n                                 className={s.text_area}\r\n                                 onKeyUp={props.onKeyPress}\r\n                                 highlight={props.tagsNameArray}\r\n                                 onChange={(event) => props.setAreaText (event.target.value)}\r\n        />\r\n    )\r\n}","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./store\";\r\nimport {tagsAPI} from \"../1-api/api\";\r\n\r\nexport type TagType = {\r\n    id: string\r\n    title: string\r\n    noteId: string\r\n}\r\nexport const initialState: TagType[] = []\r\ntype InitialStateType = typeof initialState\r\ntype ActionType = ReturnType<typeof setTagAC> | ReturnType<typeof addTagAC>\r\n|ReturnType<typeof deleteTagAC>\r\n\r\n\r\nexport const tagReducer = (state: InitialStateType = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case'SET-TAG':\r\n            return [...action.tags]\r\n        case 'ADD-TAG':\r\n            return [...state, action.tag]\r\n        case 'DELETE-TAG':\r\n            return state.filter(t => t.id !== action.id)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTagAC = (tags: TagType[]) => ({type: 'SET-TAG', tags} as const)\r\nexport const addTagAC = (tag: TagType[]) => ({type: 'ADD-TAG', tag} as const)\r\nexport const deleteTagAC = (id:string) => ({type: 'DELETE-TAG', id} as const)\r\nexport const getTagsListTC = () => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionType>) => {\r\n    try {\r\n        const res = await tagsAPI.getTags()\r\n        // @ts-ignore\r\n        dispatch(setTagAC(res.data.tags));\r\n    } catch (error) {\r\n        console.log('failed', 'Some error occurred')\r\n    }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Button} from \"../c-5-Button/Button\";\r\nimport s from \"./NotesField.module.scss\";\r\nimport {Input} from \"../c-6-Input/Input\";\r\n\r\nimport {useDispatch} from \"react-redux\";\r\nimport {NotesType} from \"../../3-redux/notes-reducer\";\r\nimport {v1} from \"uuid\";\r\nimport {addTagAC, TagType} from \"../../3-redux/tag-reducer\";\r\n\r\ntype NotesFieldType = {\r\n    notes: NotesType,\r\n    setEditMode: (value: boolean) => void\r\n    editMode: boolean\r\n    updateNotes: (note: NotesType, areaText: string) => void\r\n    tags: TagType[]\r\n}\r\n\r\nexport const NotesField = (props: NotesFieldType) => {\r\n    const dispatch = useDispatch()\r\n    const [areaText, setAreaText] = useState<string>(props.notes.textNote)\r\n    const tagsNameArray = props.tags.map(t => t.title.slice(1))\r\n\r\n    const changeEditMode = () => {\r\n        props.setEditMode(true)\r\n\r\n    }\r\n    const updateNote = () => {\r\n        if (areaText.trim() !== '') {\r\n            props.updateNotes(props.notes, areaText)\r\n        } else {\r\n            console.log('Title is required')\r\n        }\r\n    }\r\n    const hashTagsArray = areaText.match(/#[0-9A-Za-zА-Яа-яё]+/g);\r\n\r\n    const addTagOnKeyPress = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (e.keyCode === 32 && hashTagsArray && hashTagsArray.length) {\r\n            const tagTitle = hashTagsArray ? hashTagsArray[0] : ''\r\n            setAreaText(areaText.replace(/#/g, ''))\r\n            let newTag = v1()\r\n            const newTagObjj: TagType = {\r\n                id: newTag,\r\n                title: `#${tagTitle.slice(1)}`,\r\n                noteId: props.notes.id\r\n            }\r\n            // @ts-ignore\r\n            dispatch(addTagAC(newTagObjj))\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.button}>\r\n                <Button className={s.btn} onClick={updateNote}>Save</Button>\r\n                <Button className={s.btn} onClick={changeEditMode}>Change</Button>\r\n            </div>\r\n            <div className={s.text}>\r\n                {\r\n                    !props.editMode\r\n                        ? <div className={s.note_text}>{areaText}</div> :\r\n                        <Input areaText={areaText}\r\n                               className={s.inputBlock}\r\n                               onKeyPress={addTagOnKeyPress}\r\n                               setAreaText={setAreaText}\r\n                               tagsNameArray={tagsNameArray}\r\n\r\n                        />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Button} from \"../../c-5-Button/Button\";\r\nimport s from \"./AddTag.module.scss\";\r\nimport {Input} from \"@material-ui/core\";\r\n\r\ntype AddTagType = {\r\n    noteId: string,\r\n    addTag: (title: string, noteId: string) => void\r\n\r\n}\r\n\r\nexport const AddTag = (props: AddTagType) => {\r\n    const [tagText, setTagText] = useState<string>('')\r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTagText(e.currentTarget.value)\r\n    }\r\n    const addTag = () => {\r\n        if (tagText.trim() !== '') {\r\n            props.addTag(tagText, props.noteId)\r\n            setTagText('')\r\n            console.log('VSE OK')\r\n        } else {\r\n            console.log('Title is required')\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.tag}>\r\n            <Input value={tagText} onChange={inputHandler} type=\"text\" placeholder='Add tag...' className={s.input}/>\r\n            <Button onClick={addTag}>Add</Button>\r\n        </div>\r\n    )\r\n}","import React, {useCallback} from 'react';\r\nimport {deleteTagAC, TagType} from \"../../3-redux/tag-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport s from \"./Tag.module.scss\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\n\r\nexport type PropsType = {\r\n    tag: TagType\r\n    editMode:boolean\r\n}\r\n\r\nexport const Tag: React.FC<PropsType> = ({tag, editMode}) => {\r\n    const dispatch = useDispatch()\r\n    const deleteNote = useCallback(() => {\r\n        dispatch(deleteTagAC(tag.id))\r\n    }, [dispatch,tag])\r\n    return (\r\n        <div className={s.tag}>\r\n            {tag.title}\r\n            {editMode &&  <Button className={s.tagBtn} onClick={deleteNote}>X</Button>}\r\n        </div>\r\n    )\r\n}","import React, {useCallback} from \"react\";\r\nimport {AddTag} from \"./AddTag/AddTag\";\r\nimport s from \"./TagContainer.module.scss\"\r\nimport {Tag} from \"../c-8-Tag/Tag\";\r\nimport {addTagAC, TagType} from \"../../3-redux/tag-reducer\";\r\nimport {v1} from \"uuid\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PropsTagContainerType = {\r\n    tag: TagType[],\r\n    noteId: string,\r\n    editMode: boolean\r\n}\r\n\r\nexport const TagContainer: React.FC<PropsTagContainerType> = ({tag, editMode,noteId,children}) => {\r\n    const dispatch = useDispatch()\r\n     const addTag = (title: string, noteId: string) => {\r\n        let newTag = v1()\r\n        const newTagObj: TagType = {\r\n            id: newTag,\r\n            title: `#${title}`,\r\n            noteId: noteId\r\n        }\r\n        // @ts-ignore\r\n        dispatch(addTagAC(newTagObj))\r\n    }\r\n\r\n    const mappedTags = useCallback(() => {\r\n        return tag && tag.map(tag => <Tag key={tag.id}\r\n                                                      tag={tag}\r\n                                                      editMode={editMode}/>\r\n        )\r\n    }, [tag,editMode])\r\n    return (\r\n        <div className={s.container}>\r\n            {mappedTags()}\r\n            <AddTag addTag={addTag} noteId={noteId}/>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useState} from 'react';\r\nimport s from './Note.module.scss';\r\nimport {NotesField} from \"../c-4-NotesField/NotesField\";\r\nimport {Button} from \"../c-5-Button/Button\";\r\nimport {TagContainer} from \"../c-7-TagBlock/TagContainer\";\r\nimport {deleteNoteAC, NotesType, updateNoteAC} from \"../../3-redux/notes-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../3-redux/store\";\r\nimport {TagType} from \"../../3-redux/tag-reducer\";\r\n\r\nexport type PropsType = {\r\n    note: NotesType\r\n}\r\n\r\nexport const Note: React.FC<PropsType> = ({note}) => {\r\n    const dispatch = useDispatch()\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    // @ts-ignore\r\n    const tags = useSelector<AppStateType, TagType[]>(state => state.tags.filter(t => t.noteId === note.id))\r\n\r\n    function updateNotes(note: NotesType, areaText: string) {\r\n        const noteText = areaText.replace(/#/g, '')\r\n        const updateNoteObj: NotesType = {\r\n            id: note.id,\r\n            title: note.title,\r\n            textNote: noteText\r\n        }\r\n        if (areaText.trim() !== '') {\r\n            dispatch(updateNoteAC(updateNoteObj))\r\n            setEditMode(false)\r\n        } else {\r\n            const minLength = 1\r\n            console.log('failed', `Text must be longer than ${minLength} symbol`)\r\n        }\r\n    }\r\n\r\n    const deleteNote = useCallback(() => {\r\n        dispatch(deleteNoteAC(note.id))\r\n    }, [dispatch,note.id])\r\n    return (\r\n        <div className={s.note}>\r\n            <div className={s.headerNote}>\r\n                <Button onClick={deleteNote}>X</Button>\r\n            </div>\r\n            <div className={s.title}>\r\n                <h1>{note.title}</h1>\r\n            </div>\r\n            <NotesField notes={note} editMode={editMode}\r\n                        setEditMode={setEditMode} updateNotes={updateNotes}\r\n                        tags={tags}/>\r\n            <TagContainer tag={tags} noteId={note.id} editMode={editMode}/>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect} from 'react';\r\nimport s from './App.module.scss';\r\nimport {Search} from \"../2-components/c-1-Search/Search\";\r\nimport {AddNotes} from \"../2-components/c-2-AddNotes/AddNotes\";\r\nimport {Note} from \"../2-components/c-3-Note/Note\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addNotesAC, getNotesListTC, NotesType, setNodesFilter} from \"../3-redux/notes-reducer\";\r\nimport {AppStateType} from \"../3-redux/store\";\r\nimport {v1} from \"uuid\";\r\nimport {getTagsListTC} from \"../3-redux/tag-reducer\";\r\n\r\nexport const App: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const notesArr = useSelector((state: AppStateType) => state.notes)\r\n    const tagsArr=useSelector((state: AppStateType) => state.tags)\r\n    /* const addNote = useCallback((title: string) => {\r\n         const thunk = addNoteTC(title)\r\n         dispatch(thunk)\r\n     }, [])*/\r\n    function addNote(title: string) {\r\n        let newNote = v1();\r\n        const newNoteObj: NotesType = {\r\n            id: newNote,\r\n            title: title,\r\n            textNote: 'Add notes'\r\n        }\r\n        dispatch(addNotesAC(newNoteObj))\r\n        //setNotes([newNoteObj, ...notes]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getNotesListTC())\r\n        dispatch(getTagsListTC())\r\n\r\n    }, [dispatch])\r\n\r\n\r\n    const mappedNotes = useCallback(() => {\r\n        return notesArr && notesArr.map((note) => {\r\n            return <Note key={note.id}\r\n                         note={note}\r\n            />\r\n        })\r\n    }, [notesArr])\r\n\r\n    const findNote = (value: string) => {\r\n        // @ts-ignore\r\n        const notesId = tagsArr.filter(t => t.title === value).map(t => t.noteId)\r\n        dispatch(setNodesFilter(notesId))\r\n    }\r\n\r\n    return (\r\n        <div className={s.app}>\r\n            <h1 className={s.name}>NOTES</h1>\r\n            <Search findNote={findNote}/>\r\n            <AddNotes addNote={addNote}/>\r\n            <div className={s.note}>\r\n                {\r\n                    mappedNotes()\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {notesReducer} from \"./notes-reducer\";\r\nimport {tagReducer} from \"./tag-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    notes: notesReducer,\r\n    tags:tagReducer\r\n})\r\n/*export const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n})*/\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './4-app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./3-redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n      <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3Bl20\",\"name\":\"App_name__W0Qks\",\"search\":\"App_search__1_HLQ\",\"addNotes\":\"App_addNotes__13eSY\",\"note\":\"App_note__2vxUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NotesField_container__3N7mE\",\"button\":\"NotesField_button__2UyP_\",\"btn\":\"NotesField_btn__3mbhl\",\"text\":\"NotesField_text__2aQCI\",\"input\":\"NotesField_input__370uE\",\"note_text\":\"NotesField_note_text__Ftoys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__1RsDL\",\"headerNote\":\"Note_headerNote__31V-K\",\"title\":\"Note_title__JlUW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"AddTag_tag__3wFw7\",\"input\":\"AddTag_input__SHEOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"Tag_tag__1T_3z\",\"tagBtn\":\"Tag_tagBtn__3736q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3xOzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text_area\":\"Input_text_area__2Tf2C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TagContainer_container__ZsqPg\"};"],"sourceRoot":""}